{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKbL,EAAKY,iBAAiB,UAAWC,IAChCA,EAAEC,iBACD,MAAMC,EAAQC,SAAShB,EAAKiB,SAASZ,MAAMa,OACrCC,EAAOH,SAAShB,EAAKiB,SAASE,KAAKD,OACnCE,EAASJ,SAAShB,EAAKiB,SAASG,OAAOF,OAC7C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAEnClB,EAAckB,EADMN,GAASM,EAAI,GAAKF,GAEnCG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MAEhBkB,EAAAzB,GAAS0B,OAAOC,QAAQ,qBAAqBrB,QAAeC,MAAU,IAExEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAElBkB,EAAAzB,GAAS0B,OAAOG,QAAQ,oBAAoBvB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nform.addEventListener('submit', (e) => {\n e.preventDefault(); \n  const delay = parseInt(form.elements.delay.value); \n  const step = parseInt(form.elements.step.value); \n  const amount = parseInt(form.elements.amount.value); \n  for (let i = 1; i <= amount; i += 1) {\n    let extendedDelay = delay + (i - 1) * step;\n    createPromise(i, extendedDelay) \n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n         Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n\n      });\n  }\n});\n\n\n\n  "],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","parseInt","elements","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.393af698.js.map"}